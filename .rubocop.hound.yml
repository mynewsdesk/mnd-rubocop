AllCops:
  # Exclude automatically generated rails files for easier app:update's etc
  Exclude:
    - bin/*
    - db/schema.rb
    - config/boot.rb
    - config/environment.rb
    - config/environments/*
    - config/initializers/filter_parameter_logging.rb
    - config/initializers/session_store.rb
    - config/locales/plurals.rb # usually cargo culted from svenfuchs and full of violations
    - vendor/**/*
  DisplayCopNames: true
  NewCops: disable

# https://github.com/mynewsdesk/mynewsdesk/pull/3197
Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation

# https://github.com/mynewsdesk/mynewsdesk/pull/3041
# https://github.com/mynewsdesk/mynewsdesk/pull/3260 (change Style/ to Layout/)
Layout/ExtraSpacing:
  AllowForAlignment: false

# https://github.com/mynewsdesk/mynewsdesk/pull/3065
# https://github.com/mynewsdesk/mynewsdesk/pull/3260 (change Style/ to Layout/)
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# https://github.com/mynewsdesk/mynewsdesk/pull/3205
Layout/LineLength:
  Max: 128
  AllowURI: true # https://github.com/mynewsdesk/mnd-rubocop/pull/6

# https://github.com/mynewsdesk/mynewsdesk/pull/3520
Style/GuardClause:
  Enabled: false

# https://github.com/mynewsdesk/mnd-rubocop/pull/3
Style/IfUnlessModifier:
  Enabled: false

Style/StringLiterals:
  EnforcedStyle: double_quotes

# https://github.com/mynewsdesk/mnd-rubocop/pull/2
# (change TrailingCommaInLiteral to TrailingCommaInArrayLiteral & TrailingCommaInHashLiteral)
Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/FrozenStringLiteralComment:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false

# We have a lot of variables looking like eg. foo_bar_2019, this cop would
# want that to be foo_bar2019 which is worse in many cases.
Naming/VariableNumber:
  Enabled: false

Layout/ArgumentAlignment:
  EnforcedStyle: with_fixed_indentation

# .positive? doesn't seem easier to read than > 0 for most cases
Style/NumericPredicate:
  Enabled: false

# Human code review does a better job of determining if number of arguments make sense or not
Metrics/ParameterLists:
  Enabled: false

# Specs should catch bugs related to not calling super
Lint/MissingSuper:
  Enabled: false

# If the code works as intended it's not ambiguous
Lint/AmbiguousBlockAssociation:
  Enabled: false

# No idea how this would "do the opposite of what the author intends" as stated in the docs
Lint/SafeNavigationWithEmpty:
  Enabled: false

# https://github.com/mynewsdesk/mynewsdesk/pull/3058
Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/MethodLength:
  Enabled: false
Metrics/ClassLength:
  Enabled: false
Metrics/ModuleLength:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

# More parenthesis noise doesn't necessarily make ranges easier to read
Lint/AmbiguousRange:
  Enabled: false

# Post 1.0 cop enablers
Gemspec/DateAssignment:
  Enabled: true
Layout/LineEndStringConcatenationIndentation:
  Enabled: true
Layout/SpaceBeforeBrackets:
  Enabled: true
Lint/AmbiguousAssignment:
  Enabled: true
Lint/AmbiguousOperatorPrecedence:
  Enabled: true
Lint/DeprecatedConstants:
  Enabled: true
Lint/DuplicateBranch:
  Enabled: true
Lint/DuplicateRegexpCharacterClassElement:
  Enabled: true
Lint/EmptyBlock:
  Enabled: true
Lint/EmptyClass:
  Enabled: true
Lint/EmptyInPattern:
  Enabled: true
Lint/IncompatibleIoSelectWithFiberScheduler:
  Enabled: true
Lint/LambdaWithoutLiteralBlock:
  Enabled: true
Lint/NoReturnInBeginEndBlocks:
  Enabled: true
Lint/NumberedParameterAssignment:
  Enabled: true
Lint/OrAssignmentToConstant:
  Enabled: true
Lint/RedundantDirGlobSort:
  Enabled: true
Lint/RequireRelativeSelfPath:
  Enabled: true
Lint/SymbolConversion:
  Enabled: true
Lint/ToEnumArguments:
  Enabled: true
Lint/TripleQuotes:
  Enabled: true
Lint/UnexpectedBlockArity:
  Enabled: true
Lint/UnmodifiedReduceAccumulator:
  Enabled: true
Security/IoMethods:
  Enabled: true
Style/ArgumentsForwarding:
  Enabled: true
Style/CollectionCompact:
  Enabled: true
Style/DocumentDynamicEvalDefinition:
  Enabled: true
Style/EndlessMethod:
  Enabled: true
Style/HashConversion:
  Enabled: true
Style/HashExcept:
  Enabled: true
Style/IfWithBooleanLiteralBranches:
  Enabled: true
Style/InPatternThen:
  Enabled: true
Style/MultilineInPatternThen:
  Enabled: true
Style/NegatedIfElseCondition:
  Enabled: true
Style/NilLambda:
  Enabled: true
Style/NumberedParameters:
  Enabled: true
Style/NumberedParametersLimit:
  Enabled: true
Style/QuotedSymbols:
  Enabled: true
Style/RedundantArgument:
  Enabled: true
Style/RedundantSelfAssignmentBranch:
  Enabled: true
Style/SelectByRegexp:
  Enabled: true
Style/StringChars:
  Enabled: true
Style/SwapValues:
  Enabled: true
